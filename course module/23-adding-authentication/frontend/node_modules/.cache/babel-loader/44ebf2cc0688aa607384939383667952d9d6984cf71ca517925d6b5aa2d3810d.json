{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\revision\\\\23-adding-authentication\\\\frontend\\\\src\\\\components\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Form, Link, redirect, useSearchParams } from 'react-router-dom';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AuthForm() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const isLogin = searchParams.get('mode') === 'login';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"post\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? 'Log in' : 'Create a new user'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `?mode=${isLogin ? 'signup' : 'login'}`,\n          children: isLogin ? 'Create New User' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(AuthForm, \"HWxNQEGJGSlsPJ3ubBB3081mtng=\", false, function () {\n  return [useSearchParams];\n});\n_c = AuthForm;\nexport default AuthForm;\nexport async function action({\n  request,\n  params\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'signup' && mode !== 'login') {\n    throw JSON.stringify({\n      message: 'Invalid credentials'\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw JSON.stringify({\n      message: \"Could not save event.\",\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","Form","Link","redirect","useSearchParams","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthForm","_s","searchParams","isLogin","get","children","method","className","form","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","required","actions","to","_c","action","request","params","URL","url","mode","JSON","stringify","message","status","data","formData","authData","email","password","response","fetch","headers","body","ok","$RefreshReg$"],"sources":["F:/react/revision/23-adding-authentication/frontend/src/components/AuthForm.js"],"sourcesContent":["import { useState } from 'react';\nimport {Form, Link, redirect, useSearchParams} from 'react-router-dom';\n\nimport classes from './AuthForm.module.css';\n\nfunction AuthForm() {\n  const [searchParams] = useSearchParams();\n  const isLogin = searchParams.get('mode') === 'login';\n\n  return (\n    <>\n      <Form method=\"post\" className={classes.form}>\n        <h1>{isLogin ? 'Log in' : 'Create a new user'}</h1>\n        <p>\n          <label htmlFor=\"email\">Email</label>\n          <input id=\"email\" type=\"email\" name=\"email\" required />\n        </p>\n        <p>\n          <label htmlFor=\"image\">Password</label>\n          <input id=\"password\" type=\"password\" name=\"password\" required />\n        </p>\n        <div className={classes.actions}>\n          <Link to={`?mode=${isLogin ? 'signup' : 'login'}`}>\n            {isLogin ? 'Create New User' : 'Login'}\n          </Link>\n          <button>Save</button>\n        </div>\n      </Form>\n    </>\n  );\n}\n\nexport default AuthForm;\n\n\nexport async function action({ request, params }) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'signup' && mode !== 'login') {\n    throw JSON.stringify({message: 'Invalid credentials'},{status:422});\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password'),\n  }\n  const response = await fetch(\"http://localhost:8080/\"+mode, {\n    method:\"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body:JSON.stringify(authData),\n  })\n  if (response.status === 422 || response.status === 401) {\n    return response\n  }\n  if (!response.ok) {\n    throw JSON.stringify({message: \"Could not save event.\", status: 500});\n  }\n  return redirect('/events');\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}