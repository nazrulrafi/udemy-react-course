{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\revision\\\\22.2-react-router-project\\\\frontend\\\\src\\\\pages\\\\NewEvent.jsx\";\nimport EventForm from \"../components/EventForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw JSON.stringify({\n      message: \"Could not save events.\"\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","jsxDEV","_jsxDEV","NewEventPage","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["F:/react/revision/22.2-react-router-project/frontend/src/pages/NewEvent.jsx"],"sourcesContent":["import EventForm from \"../components/EventForm.js\";\r\n\r\nexport default function NewEventPage() {\r\n    return (\r\n        <EventForm method=\"post\"/>\r\n    )\r\n}\r\n\r\nexport async function action({request,params}) {\r\n    const data = await request.formData();\r\n    const eventData = {\r\n        title:data.get(\"title\"),\r\n        image:data.get(\"image\"),\r\n        date:data.get(\"date\"),\r\n        description:data.get(\"description\"),\r\n    }\r\n    const response = await fetch(\"http://localhost:8080/events\", {\r\n        method:\"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(eventData),\r\n    });\r\n    if (response.status === 422) {\r\n        return response\r\n    }\r\n    if (!response.ok) {\r\n        throw JSON.stringify({message: \"Could not save events.\"})\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,YAAYA,CAAA,EAAG;EACnC,oBACID,OAAA,CAACF,SAAS;IAACI,MAAM,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAElC;AAACC,EAAA,GAJuBN,YAAY;AAMpC,OAAO,eAAeO,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAE;EAC3C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAACH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBC,KAAK,EAACL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBE,IAAI,EAACN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACrBG,WAAW,EAACP,IAAI,CAACI,GAAG,CAAC,aAAa;EACtC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDlB,MAAM,EAAC,MAAM;IACbmB,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAClC,CAAC,CAAC;EACF,IAAIM,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;IACzB,OAAON,QAAQ;EACnB;EACA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IACd,MAAMH,IAAI,CAACC,SAAS,CAAC;MAACG,OAAO,EAAE;IAAwB,CAAC,CAAC;EAC7D;AACJ;AAAC,IAAApB,EAAA;AAAAqB,YAAA,CAAArB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}