{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\revision\\\\22.2-react-router-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.jsx\",\n  _s = $RefreshSig$();\nimport { redirect, useRouteLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch events.'\n    }), {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw JSON.stringify({\n      message: 'Could not fetch events.'\n    });\n  }\n  redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["redirect","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","Response","JSON","stringify","message","status","action","method","$RefreshReg$"],"sources":["F:/react/revision/22.2-react-router-project/frontend/src/pages/EventDetail.jsx"],"sourcesContent":["import {redirect, useRouteLoaderData} from 'react-router-dom';\r\n\r\nimport EventItem from '../components/EventItem';\r\n\r\nfunction EventDetailPage() {\r\n    const data = useRouteLoaderData('event-detail');\r\n\r\n    return <EventItem event={data.event} />;\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({ request, params }) {\r\n    const id = params.eventId;\r\n\r\n    const response = await fetch('http://localhost:8080/events/' + id);\r\n\r\n    if (!response.ok) {\r\n        throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\r\n            status: 500,\r\n        });\r\n    } else {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function action({params,request}) {\r\n    const eventId = params.eventId;\r\n    const response = await fetch('http://localhost:8080/events/' + eventId,{\r\n        method: request.method,\r\n    });\r\n    if (!response.ok) {\r\n        throw JSON.stringify({ message: 'Could not fetch events.' })\r\n    }\r\n    redirect(\"/events\")\r\n}"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,kBAAkB,QAAO,kBAAkB;AAE7D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAOG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACN,EAAA,CAJQD,eAAe;EAAA,QACPJ,kBAAkB;AAAA;AAAAY,EAAA,GAD1BR,eAAe;AAMxB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAC9C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA0B,CAAC,CAAC,EAAE;MACvEC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC,MAAM;IACH,OAAOP,QAAQ;EACnB;AACJ;AAEA,OAAO,eAAeQ,MAAMA,CAAC;EAACX,MAAM;EAACD;AAAO,CAAC,EAAE;EAC3C,MAAMG,OAAO,GAAGF,MAAM,CAACE,OAAO;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,OAAO,EAAC;IACnEU,MAAM,EAAEb,OAAO,CAACa;EACpB,CAAC,CAAC;EACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;IACd,MAAME,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA0B,CAAC,CAAC;EAChE;EACAzB,QAAQ,CAAC,SAAS,CAAC;AACvB;AAAC,IAAAa,EAAA;AAAAgB,YAAA,CAAAhB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}