{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\revision\\\\22.2-react-router-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, Router, RouterProvider } from \"react-router-dom\";\nimport EditEventPage from './pages/EditEvent';\nimport EventDetailPage, { loader as eventDetailLoader } from './pages/EventDetail';\nimport EventPage, { loader as eventLoader } from './pages/Events';\nimport HomePage from './pages/Home';\nimport NewEventPage from './pages/NewEvent';\nimport RootLayout from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 14\n  }, this),\n  exact: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 28\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }, this),\n      loader: eventLoader\n    }, {\n      path: \":eventId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 22\n      }, this),\n      loader: eventDetailLoader\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 32\n      }, this)\n    }, {\n      path: \":eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 42\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","Router","RouterProvider","EditEventPage","EventDetailPage","loader","eventDetailLoader","EventPage","eventLoader","HomePage","NewEventPage","RootLayout","EventsRootLayout","ErrorPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","exact","children","index","App","_c","$RefreshReg$"],"sources":["F:/react/revision/22.2-react-router-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport {createBrowserRouter, Router, RouterProvider} from \"react-router-dom\";\nimport EditEventPage from './pages/EditEvent';\nimport EventDetailPage,{loader as eventDetailLoader} from './pages/EventDetail';\nimport EventPage,{loader as eventLoader} from './pages/Events';\nimport HomePage from './pages/Home';\nimport NewEventPage from './pages/NewEvent';\nimport RootLayout from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\n\n\nconst router = createBrowserRouter([\n  {\n    path:\"/\",\n    element: <RootLayout />,\n    exact: <ErrorPage />,\n    children:[\n      {index:true,element: <HomePage />},\n      {\n        path:\"events\",\n        element: <EventsRootLayout />,\n        children:[\n          {\n            index:true,\n            element: <EventPage />,\n            loader: eventLoader\n          },\n          {\n            path:\":eventId\",\n            element: <EventDetailPage/>,\n            loader:eventDetailLoader\n          },\n          {path:\"new\",element: <NewEventPage />},\n          {path:\":eventId/edit\",element: <EditEventPage />}\n        ]\n      }\n    ]\n  }\n]);\nfunction App() {\n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,mBAAmB,EAAEC,MAAM,EAAEC,cAAc,QAAO,kBAAkB;AAC5E,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,eAAe,IAAEC,MAAM,IAAIC,iBAAiB,QAAO,qBAAqB;AAC/E,OAAOC,SAAS,IAAEF,MAAM,IAAIG,WAAW,QAAO,gBAAgB;AAC9D,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,MAAM,GAAGhB,mBAAmB,CAAC,CACjC;EACEiB,IAAI,EAAC,GAAG;EACRC,OAAO,eAAEH,OAAA,CAACJ,UAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,KAAK,eAAER,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACpBE,QAAQ,EAAC,CACP;IAACC,KAAK,EAAC,IAAI;IAACP,OAAO,eAAEH,OAAA,CAACN,QAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,CAAC,EAClC;IACEL,IAAI,EAAC,QAAQ;IACbC,OAAO,eAAEH,OAAA,CAACH,gBAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC7BE,QAAQ,EAAC,CACP;MACEC,KAAK,EAAC,IAAI;MACVP,OAAO,eAAEH,OAAA,CAACR,SAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACtBjB,MAAM,EAAEG;IACV,CAAC,EACD;MACES,IAAI,EAAC,UAAU;MACfC,OAAO,eAAEH,OAAA,CAACX,eAAe;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MAC3BjB,MAAM,EAACC;IACT,CAAC,EACD;MAACW,IAAI,EAAC,KAAK;MAACC,OAAO,eAAEH,OAAA,CAACL,YAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC,EACtC;MAACL,IAAI,EAAC,eAAe;MAACC,OAAO,eAAEH,OAAA,CAACZ,aAAa;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC;EAErD,CAAC;AAEL,CAAC,CACF,CAAC;AACF,SAASI,GAAGA,CAAA,EAAG;EACb,oBAAOX,OAAA,CAACb,cAAc;IAACc,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C;AAACK,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}