{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\revision\\\\22.2-react-router-project\\\\frontend\\\\src\\\\pages\\\\Events.jsx\",\n  _s = $RefreshSig$();\nimport EventsList from '../components/EventsList';\nimport { useLoaderData, json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events'); // Corrected the endpoint here\n  if (!response.ok) {\n    return json({\n      message: \"Could not find events\"\n    }, {\n      status: 500\n    });\n  } else {\n    const data = await response.json(); // Parse JSON data from the response\n    return data;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","json","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","status","$RefreshReg$"],"sources":["F:/react/revision/22.2-react-router-project/frontend/src/pages/Events.jsx"],"sourcesContent":["import EventsList from '../components/EventsList';\r\nimport { useLoaderData, json } from \"react-router-dom\";\r\n\r\nfunction EventsPage() {\r\n    const data = useLoaderData();\r\n    const events = data.events;\r\n\r\n    return (\r\n        <>\r\n            <EventsList events={events} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n    const response = await fetch('http://localhost:8080/events'); // Corrected the endpoint here\r\n    if (!response.ok) {\r\n        return json(\r\n            { message: \"Could not find events\" },\r\n            { status: 500 }\r\n        );\r\n    } else {\r\n        const data = await response.json(); // Parse JSON data from the response\r\n        return data;\r\n    }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B,MAAMS,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA,CAACJ,UAAU;MAACU,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEX;AAACP,EAAA,CATQD,UAAU;EAAA,QACFN,aAAa;AAAA;AAAAe,EAAA,GADrBT,UAAU;AAWnB,eAAeA,UAAU;AAEzB,OAAO,eAAeU,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC,CAAC,CAAC;EAC9D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,OAAOlB,IAAI,CACP;MAAEmB,OAAO,EAAE;IAAwB,CAAC,EACpC;MAAEC,MAAM,EAAE;IAAI,CAClB,CAAC;EACL,CAAC,MAAM;IACH,MAAMb,IAAI,GAAG,MAAMS,QAAQ,CAAChB,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,OAAOO,IAAI;EACf;AACJ;AAAC,IAAAO,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}