{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from './cart-slice';\nexport const fetchcartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://littlewheel-default-rtdb.firebaseio.com/cart.json\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch cart\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: \"Sending cart data failed\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: \"Sending cart data\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://littlewheel-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n      if (!response.ok) {\n        dispatch(uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: \"Sending cart data failed\"\n        }));\n      }\n    };\n    try {\n      await sendRequest();\n    } catch (error) {}\n    dispatch(uiActions.showNotification({\n      status: 'success',\n      title: 'Success!',\n      message: \"Sending cart data successfully\"\n    }));\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchcartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["F:/react/udemy/21-redux-advance/src/store/cart-actions.js"],"sourcesContent":["import {uiActions} from \"./ui-slice\";\r\nimport {cartActions} from './cart-slice';\r\nexport const fetchcartData = ()=>{\r\n    return async (dispatch)=>{\r\n        const fetchData = async ()=>{\r\n            const response = await fetch(\"https://littlewheel-default-rtdb.firebaseio.com/cart.json\");\r\n            if (!response.ok){\r\n                throw new Error(\"Failed to fetch cart\");\r\n            }\r\n            const data = await response.json();\r\n            return data;\r\n        }\r\n\r\n        try {\r\n           const cartData = await fetchData()\r\n            dispatch(cartActions.replaceCart({\r\n                items:cartData.items || [],\r\n                totalQuantity:cartData.totalQuantity,\r\n            }));\r\n        }catch(error){\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                    status: 'error',\r\n                    title: 'Error!',\r\n                    message: \"Sending cart data failed\"\r\n                })\r\n            )\r\n        }\r\n    }\r\n}\r\nexport const sendCartData = (cart) =>{\r\n    return async (dispatch) => {\r\n        dispatch(\r\n            uiActions.showNotification({\r\n                status: 'pending',\r\n                title: 'Sending...',\r\n                message: \"Sending cart data\"\r\n            })\r\n        )\r\n        const sendRequest = async () =>{\r\n            const response = await fetch(\"https://littlewheel-default-rtdb.firebaseio.com/cart.json\", {\r\n                    method: \"PUT\",\r\n                    body: JSON.stringify({\r\n                        items:cart.items,\r\n                        totalQuantity: cart.totalQuantity,\r\n                    }),\r\n                }\r\n            );\r\n            if (!response.ok) {\r\n                dispatch(\r\n                    uiActions.showNotification({\r\n                        status: 'error',\r\n                        title: 'Error!',\r\n                        message: \"Sending cart data failed\"\r\n                    })\r\n                )\r\n            }\r\n        }\r\n        try {\r\n            await  sendRequest()\r\n        }catch(error){}\r\n\r\n        dispatch(\r\n            uiActions.showNotification({\r\n                status: 'success',\r\n                title: 'Success!',\r\n                message: \"Sending cart data successfully\"\r\n            })\r\n        )\r\n    }\r\n}"],"mappings":"AAAA,SAAQA,SAAS,QAAO,YAAY;AACpC,SAAQC,WAAW,QAAO,cAAc;AACxC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAI;EAC7B,OAAO,MAAOC,QAAQ,IAAG;IACrB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAU;MACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2DAA2D,CAAC;MACzF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAC;QACb,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MAC3C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACf,CAAC;IAED,IAAI;MACD,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MACjCD,QAAQ,CAACF,WAAW,CAACW,WAAW,CAAC;QAC7BC,KAAK,EAACF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC1BC,aAAa,EAACH,QAAQ,CAACG;MAC3B,CAAC,CAAC,CAAC;IACP,CAAC,QAAMC,KAAK,EAAC;MACTZ,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CACL,CAAC;IACL;EACJ,CAAC;AACL,CAAC;AACD,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAI;EACjC,OAAO,MAAOlB,QAAQ,IAAK;IACvBA,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;MACvBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CAAC,CACL,CAAC;IACD,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAW;MAC3B,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,2DAA2D,EAAE;QAClFiB,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBb,KAAK,EAACQ,IAAI,CAACR,KAAK;UAChBC,aAAa,EAAEO,IAAI,CAACP;QACxB,CAAC;MACL,CACJ,CAAC;MACD,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;QACdJ,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;UACvBC,MAAM,EAAE,OAAO;UACfC,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAE;QACb,CAAC,CACL,CAAC;MACL;IACJ,CAAC;IACD,IAAI;MACA,MAAOG,WAAW,CAAC,CAAC;IACxB,CAAC,QAAMP,KAAK,EAAC,CAAC;IAEdZ,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;MACvBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,UAAU;MACjBC,OAAO,EAAE;IACb,CAAC,CACL,CAAC;EACL,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}