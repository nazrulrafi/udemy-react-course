{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\udemy\\\\21-redux-advance\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { uiActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: \"Sending cart data\"\n      }));\n      const response = await fetch(\"https://littlewheel-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        dispatch(uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: \"Sending cart data failed\"\n        }));\n      }\n      const responseData = await response.json();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: \"Sending cart data successfully\"\n      }));\n    };\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: \"Sending cart data failed\"\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ym533N9pcV2ZQROugfAj7yssIY8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Cart","Layout","Products","useSelector","useDispatch","uiActions","Notification","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dispatch","showCart","state","ui","cartIsVisible","cart","notification","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","responseData","json","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/react/udemy/21-redux-advance/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector,useDispatch } from \"react-redux\";\nimport {uiActions} from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\n\nfunction App() {\n    const dispatch = useDispatch();\n    const showCart = useSelector((state) => state.ui.cartIsVisible);\n    const cart = useSelector((state) => state.cart);\n    const notification =useSelector((state) => state.ui.notification);\n    useEffect(() => {\n\n        const sendCartData = async ()=>{\n            dispatch(\n                uiActions.showNotification({\n                    status: 'pending',\n                    title: 'Sending...',\n                    message: \"Sending cart data\"\n                })\n            )\n            const response = await fetch(\"https://littlewheel-default-rtdb.firebaseio.com/cart.json\", {\n                method: \"PUT\",\n                body: JSON.stringify(cart),\n            }\n            );\n            if (!response.ok) {\n                dispatch(\n                    uiActions.showNotification({\n                        status: 'error',\n                        title: 'Error!',\n                        message: \"Sending cart data failed\"\n                    })\n                )\n            }\n            const responseData = await response.json();\n            dispatch(\n                uiActions.showNotification({\n                    status: 'success',\n                    title: 'Success!',\n                    message: \"Sending cart data successfully\"\n                })\n            )\n        }\n\n        sendCartData().catch((error) => {\n            dispatch(\n                uiActions.showNotification({\n                    status: 'error',\n                    title: 'Error!',\n                    message: \"Sending cart data failed\"\n                })\n            )\n        })\n    }, [cart,dispatch]);\n\n    return (\n        <>\n            {notification && (\n                <Notification\n                    status={notification.status}\n                    title={notification.title}\n                    message={notification.message}\n                />\n            )}\n            <Layout>\n                {showCart && <Cart />}\n                <Products />\n            </Layout>\n        </>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}